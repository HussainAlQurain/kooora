# Production Configuration for Kooora Application
# This file contains production-specific settings

spring:
  # Production Database Configuration (PostgreSQL)
  datasource:
    url: jdbc:postgresql://${DATABASE_HOST:localhost}:${DATABASE_PORT:5432}/${DATABASE_NAME:kooora_prod}
    username: ${DATABASE_USERNAME:kooora_user}
    password: ${DATABASE_PASSWORD:changeme}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      idle-timeout: 300000
      connection-timeout: 20000
      leak-detection-threshold: 60000
      pool-name: KooraHikariCP
  
  # JPA/Hibernate Configuration for Production
  jpa:
    hibernate:
      ddl-auto: update  # Use validate in production, apply migrations separately
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: false
        use_sql_comments: false
        jdbc:
          time_zone: UTC
          batch_size: 25
        order_inserts: true
        order_updates: true
        batch_versioned_data: true
    open-in-view: false  # Disable OSIV for performance
  
  # Flyway for Database Migrations
  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
    validate-on-migrate: true
    out-of-order: true
  
  # Web Configuration
  web:
    resources:
      cache:
        cachecontrol:
          max-age: 31536000  # 1 year cache for static resources
          cache-public: true
      chain:
        strategy:
          content:
            enabled: true
            paths: /**
        cache: true
        compressed: true
  
  # JSON Configuration
  jackson:
    serialization:
      write-dates-as-timestamps: false
      indent-output: false
    deserialization:
      fail-on-unknown-properties: false
    default-property-inclusion: non_null
    time-zone: UTC

  # Security Configuration
  security:
    user:
      name: admin
      password: ${ADMIN_PASSWORD:${random.value}}
      roles: ADMIN

# Server Configuration
server:
  port: ${PORT:8080}
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json,application/xml
    min-response-size: 1024
  http2:
    enabled: true
  forward-headers-strategy: framework
  tomcat:
    max-threads: 200
    min-spare-threads: 20
    connection-timeout: 20000
    accept-count: 100
    max-connections: 8192
    mbeans-enabled: true

# JWT Configuration
app:
  jwt:
    secret: ${JWT_SECRET:mySecretKeyThatNeedsToBeChangedInProduction!}
    expiration: ${JWT_EXPIRATION:86400000}  # 24 hours
    refresh-expiration: ${JWT_REFRESH_EXPIRATION:604800000}  # 7 days

# External API Configuration
external:
  api:
    enabled: ${EXTERNAL_API_ENABLED:true}
    football:
      url: ${FOOTBALL_API_URL:https://api.football-data.org/v4}
      key: ${FOOTBALL_API_KEY:}
      rate-limit: 10  # requests per minute
      timeout: 30000  # 30 seconds

# Push Notification Configuration
notifications:
  vapid:
    public-key: ${VAPID_PUBLIC_KEY:}
    private-key: ${VAPID_PRIVATE_KEY:}
    subject: ${VAPID_SUBJECT:mailto:admin@kooora.com}

# Logging Configuration
logging:
  level:
    com.kooora: INFO
    org.springframework.security: WARN
    org.hibernate.SQL: WARN
    org.hibernate.type.descriptor.sql: WARN
    org.springframework.web: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: ${LOG_FILE:/var/log/kooora/app.log}
    max-size: 50MB
    max-history: 30
    total-size-cap: 1GB

# Actuator Configuration for Production Monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
      show-components: when-authorized
      probes:
        enabled: true
    metrics:
      enabled: true
    prometheus:
      enabled: true
  health:
    probes:
      enabled: true
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
    distribution:
      percentiles-histogram:
        http.server.requests: true
      percentiles:
        http.server.requests: 0.5, 0.9, 0.95, 0.99, 0.999

# Swagger Configuration (disabled in production)
springdoc:
  api-docs:
    enabled: false
  swagger-ui:
    enabled: false

# Cache Configuration
spring.cache:
  type: caffeine
  caffeine:
    spec: maximumSize=1000,expireAfterAccess=30m

# File Upload Configuration
spring.servlet:
  multipart:
    max-file-size: 50MB
    max-request-size: 100MB

# CORS Configuration
cors:
  allowed-origins: ${CORS_ALLOWED_ORIGINS:https://kooora.com,https://www.kooora.com}
  allowed-methods: GET,POST,PUT,DELETE,OPTIONS
  allowed-headers: '*'
  allow-credentials: true
  max-age: 3600

# Rate Limiting Configuration
rate-limit:
  enabled: true
  default-limit: 1000  # requests per hour
  burst-limit: 100     # burst capacity
  
# SSL/TLS Configuration
server.ssl:
  enabled: ${SSL_ENABLED:false}
  key-store: ${SSL_KEYSTORE_PATH:}
  key-store-password: ${SSL_KEYSTORE_PASSWORD:}
  key-store-type: ${SSL_KEYSTORE_TYPE:PKCS12}
  
# Session Configuration
server.servlet:
  session:
    timeout: PT30M  # 30 minutes
    cookie:
      http-only: true
      secure: true
      same-site: strict
      max-age: PT30M
